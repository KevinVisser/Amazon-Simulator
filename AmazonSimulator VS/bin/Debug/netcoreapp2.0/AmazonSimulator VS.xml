<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AmazonSimulator VS</name>
    </assembly>
    <members>
        <member name="T:Models.LoadingBay">
            <summary>
            Laaddok class
            </summary>
        </member>
        <member name="M:Models.LoadingBay.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            constructor voor het aanmaken van een laaddok
            </summary>
            <param name="x">Positie op de x as</param>
            <param name="y">Positie op de y as</param>
            <param name="z">Positie op de z as</param>
            <param name="rotationX">Rotatie op de x as</param>
            <param name="rotationY">Rotatie op de y as</param>
            <param name="rotationZ">Rotatie op de z as</param>
        </member>
        <member name="T:Models.Model3D">
            <summary>
            class voor alle modellen met hun variabelen
            </summary>
        </member>
        <member name="F:Models.Model3D._x">
            <summary>
            x positie
            </summary>
        </member>
        <member name="F:Models.Model3D._y">
            <summary>
            y positie
            </summary>
        </member>
        <member name="F:Models.Model3D._z">
            <summary>
            z positie
            </summary>
        </member>
        <member name="F:Models.Model3D._rX">
            <summary>
            x rotatie
            </summary>
        </member>
        <member name="F:Models.Model3D._rY">
            <summary>
            y rotatie
            </summary>
        </member>
        <member name="F:Models.Model3D._rZ">
            <summary>
            z rotatie
            </summary>
        </member>
        <member name="F:Models.Model3D.type">
            <summary>
            het type object (truck, robot, pallet etc.)
            </summary>
        </member>
        <member name="F:Models.Model3D.guid">
            <summary>
            een uniek ID per object
            </summary>
        </member>
        <member name="P:Models.Model3D.x">
            <summary>
            krijg x positie van object
            </summary>
        </member>
        <member name="P:Models.Model3D.y">
            <summary>
            krijg y positie van object
            </summary>
        </member>
        <member name="P:Models.Model3D.z">
            <summary>
            krijg z positie van object
            </summary>
        </member>
        <member name="P:Models.Model3D.rotationX">
            <summary>
            krijg x rotatie van object
            </summary>
        </member>
        <member name="P:Models.Model3D.rotationY">
            <summary>
            krijg y rotatie van object
            </summary>
        </member>
        <member name="P:Models.Model3D.rotationZ">
            <summary>
            krijg z rotatie van object
            </summary>
        </member>
        <member name="F:Models.Model3D.needsUpdate">
            <summary>
            of het object moet updaten
            </summary>
        </member>
        <member name="M:Models.Model3D.Move(System.Double,System.Double,System.Double)">
            <summary>
            Het bewegen van een object
            </summary>
            <param name="x">x positie</param>
            <param name="y">y positie</param>
            <param name="z">z positie</param>
        </member>
        <member name="M:Models.Model3D.Rotate(System.Double,System.Double,System.Double)">
            <summary>
            Roteren van het object
            </summary>
            <param name="rotationX">x rotatie</param>
            <param name="rotationY">x rotatie</param>
            <param name="rotationZ">x rotatie</param>
        </member>
        <member name="M:Models.Model3D.Update(System.Int32)">
            <summary>
            Het updaten van het object (positie etc.)
            </summary>
            <param name="tick">Hoe vaak per seconde</param>
            <returns></returns>
        </member>
        <member name="T:Models.Robot">
            <summary>
            robot class overgeerfd van model3d class
            </summary>
        </member>
        <member name="M:Models.Robot.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Char,Models.Truck)">
            <summary>
            constructor van een robot
            </summary>
            <param name="x">xPos</param>
            <param name="y">yPos</param>
            <param name="z">zPos</param>
            <param name="rotationX">xRot</param>
            <param name="rotationY">yRot</param>
            <param name="rotationZ">zRot</param>
            <param name="name">naam van het object</param>
            <param name="truck">welke truck is gekoppeld aan deze robot</param>
        </member>
        <member name="M:Models.Robot.Update(System.Int32)">
            <summary>
            Het updaten van de robot (nieuwe tasks, overgeven van een pallet aan de verbonden truck als die wacht bij het laaddok, positie etc.)
            </summary>
            <param name="tick">hoe vaak</param>
            <returns></returns>
        </member>
        <member name="M:Models.Robot.AddTask(Tasks.IRobotTask)">
            <summary>
            voeg een taak toe aan dit object
            </summary>
            <param name="task">welke taak je toevoegd</param>
        </member>
        <member name="M:Models.Robot.MoveOverPath(System.Collections.Generic.List{PathFinding.Node})">
            <summary>
            zet het pad wat de robot moet volgen
            </summary>
            <param name="path">een lijst met nodes waar hij over heen moet bewegen</param>
        </member>
        <member name="M:Models.Robot.isHome">
            <summary>
            Kijken of de robot bij het laaddok is
            </summary>
            <returns></returns>
        </member>
        <member name="T:Models.World">
            <summary>
            World class
            </summary>
        </member>
        <member name="M:Models.World.#ctor">
            <summary>
            constructor voor de world
            </summary>
        </member>
        <member name="M:Models.World.Update(System.Int32)">
            <summary>
            Update de objecten
            </summary>
            <param name="tick">hoe vaak</param>
            <returns></returns>
        </member>
        <member name="T:PathFinding.Pathfinding">
            <summary>
            Pathfinding class
            </summary>
        </member>
        <member name="F:PathFinding.Pathfinding.listOfNodes">
            <summary>
            Lijst met alle nodes
            </summary>
        </member>
        <member name="F:PathFinding.Pathfinding.PathRobot">
            <summary>
            Pad voor de robot
            </summary>
        </member>
        <member name="F:PathFinding.Pathfinding.StartRobot">
            <summary>
            Startnode voor de robot
            </summary>
        </member>
        <member name="F:PathFinding.Pathfinding.PathTruck">
            <summary>
            Het pad voor de truck
            </summary>
        </member>
        <member name="F:PathFinding.Pathfinding.StartTruck1">
            <summary>
            Startnode voor de truck 1
            </summary>
        </member>
        <member name="F:PathFinding.Pathfinding.StartTruck2">
            <summary>
            Startnode voor de truck 2
            </summary>
        </member>
        <member name="F:PathFinding.Pathfinding.StartTruck3">
            <summary>
            Startnode voor de truck 3
            </summary>
        </member>
        <member name="M:PathFinding.Pathfinding.FillList">
            <summary>
            vul de lijsten met alle nodes
            </summary>
        </member>
        <member name="M:PathFinding.Pathfinding.Listnodes(System.String,System.String,System.Collections.Generic.List{PathFinding.Node},System.Collections.Generic.List{PathFinding.Node})">
            <summary>
            geeft de lijst met nodes terug die de robot/truck moet bewandelen
            </summary>
            <param name="start">startnode van object</param>
            <param name="end">eindnode van object</param>
            <param name="nodes">de lijst moet alle nodes</param>
            <param name="path">in welke lijst je het wil stoppen</param>
            <returns></returns>
        </member>
    </members>
</doc>
